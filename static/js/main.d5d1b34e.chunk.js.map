{"version":3,"sources":["components/Characters.js","App.js","redux/reducers/reducers.js","redux/fetchapi/fetchapi.js","redux/action/action.js","index.js"],"names":["Characters","data","className","map","items","index","key","style","backgroundImage","img","name","src","alt","nickname","occupation","App","state","useSelector","characters","loading","class","initialState","error","limit","store","createStore","action","type","applyMiddleware","thunk","fetchUsers","dispatch","fetch","charApi","then","response","json","catch","fetchUsersFailure","ReactDOM","render","document","getElementById"],"mappings":"oOAEe,SAASA,EAAT,GAA+B,IAATC,EAAQ,EAARA,KACjC,OACI,kBAAC,WAAD,KAEI,yBAAKC,UAAU,OACVD,EAAKE,KAAI,SAACC,EAAOC,GACd,OACI,yBAAKC,IAAKD,EAAOH,UAAU,oCACvB,yBAAKA,UAAU,WAAWK,MAAO,CAACC,gBAAgB,OAAD,OAASJ,EAAMK,IAAf,OAC7C,wBAAIP,UAAU,aAAaE,EAAMM,MACjC,yBAAKR,UAAU,YACX,yBAAKS,IAAKP,EAAMK,IAAKG,IAAKR,EAAMS,YAEpC,yBAAKX,UAAU,aACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,aACX,0CACA,4BACKE,EAAMU,WAAWX,KAAI,SAACW,EAAYT,GAC/B,OAAO,wBAAIC,IAAKD,GAAQA,EAAQ,EAAzB,KAA8BS,iBCF1EC,MAdf,WACE,IAAMC,EAAQC,aAAY,SAAAD,GAAK,OAAIA,KAC7BE,EAAaF,EAAME,WACnBC,EAAUH,EAAMG,QACtB,OACE,yBAAKjB,UAAU,IACb,yBAAKkB,MAAM,+BAA8B,yBAAKA,MAAM,aAAY,wBAAIA,MAAM,iBAAV,kBAChE,yBAAKlB,UAAU,aACZiB,EAAU,yBAAKjB,UAAU,YAAmB,kBAACF,EAAD,CAAYC,KAAMiB,O,sBCVjEG,EAAe,CACjBF,SAAS,EACTD,WAAY,GACZI,MAAO,GACPC,MAAO,IA+BIC,EAFDC,aA3BI,WAAmC,IAAlCT,EAAiC,uDAAzBK,EAAcK,EAAW,uCAChD,OAAQA,EAAOC,MACX,IAAK,sBACD,OAAO,2BACAX,GADP,IAEIG,SAAS,IAEjB,IAAK,sBACD,OAAO,2BACAH,GADP,IAEIG,SAAS,EACTD,WAAYQ,EAAOzB,KACnBqB,MAAO,KAEf,IAAK,sBACD,OAAO,2BACAN,GADP,IAEIG,SAAS,EACTD,WAAY,GACZI,MAAOI,EAAOJ,QAEtB,QAAS,OAAON,KAMaY,YAAgBC,MCnBtCC,EAdI,WACf,OAAO,SAAUC,GACbA,ECJG,CACHJ,KAAM,wBDINK,MAAMC,sDAAiBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5CF,MAAK,SAAAC,GAEFJ,ECHL,CACHJ,KAAM,sBACN1B,KDA0BkC,OAGrBE,OAAM,SAAAf,GACHS,ECDiB,SAACT,GAC9B,MAAO,CACHK,KAAM,sBACN1B,KAAMqB,GDFWgB,CAAkBhB,SEJ3CE,EAAMO,SAASD,KACfS,IAASC,OACP,kBAAC,IAAD,CAAUhB,MAAOA,GACf,kBAAC,EAAD,OAEAiB,SAASC,eAAe,W","file":"static/js/main.d5d1b34e.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\r\n\r\nexport default function Characters({ data }) {\r\n    return (\r\n        <Fragment>\r\n\r\n            <div className=\"row\">\r\n                {data.map((items, index) => {\r\n                    return (\r\n                        <div key={index} className=\"col-6 col-sm-6 col-md-4 col-lg-3\">\r\n                            <div className=\"cus_card\" style={{backgroundImage: `url(${items.img})`}}>\r\n                                <h1 className=\"char_name\">{items.name}</h1>\r\n                                <div className=\"card_img\">\r\n                                    <img src={items.img} alt={items.nickname} />\r\n                                </div>\r\n                                <div className=\"card_body\">\r\n                                    <div className=\"card_body_in\">\r\n                                        <div className=\"card_text\">\r\n                                            <h6>Occupation</h6>\r\n                                            <ul>\r\n                                                {items.occupation.map((occupation, index) => {\r\n                                                    return <li key={index}>{index + 1}. {occupation}</li>\r\n                                                })}\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react';\nimport './assets/css/style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useSelector } from 'react-redux';\nimport Characters from './components/Characters';\nfunction App() {\n  const state = useSelector(state => state)\n  const characters = state.characters;\n  const loading = state.loading\n  return (\n    <div className=\"\">\n      <div class=\"bg-light mb-3 border-bottom\"><div class=\"container\"><h4 class=\"m-0 pt-3 pb-3\">Breaking Bad</h4></div></div>\n      <div className=\"container\">\n        {loading ? <div className=\"loading\"></div> : <Characters data={characters} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    characters: [],\r\n    error: '',\r\n    limit: 20\r\n}\r\nconst charactor = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"FETCH_USERS_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case \"FETCH_USERS_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                characters: action.data,\r\n                error: ''\r\n            }\r\n        case \"FETCH_USERS_FAILURE\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                characters: [],\r\n                error: action.error\r\n            }\r\n        default: return state\r\n\r\n    }\r\n}\r\n\r\n\r\nconst store = createStore(charactor, applyMiddleware(thunk))\r\n\r\nexport default store;","import { fetchUsersRequest, fetchUsersSuccess, fetchUsersFailure } from '../action/action'\r\nconst limit = 52;\r\nconst charApi = \"https://breakingbadapi.com/api/characters?limit=\";\r\nconst fetchUsers = () => {\r\n    return function (dispatch) {\r\n        dispatch(fetchUsersRequest())\r\n        fetch(charApi + limit).then(response => response.json())\r\n            .then(response => {\r\n                const usersData = response\r\n                dispatch(fetchUsersSuccess(usersData))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchUsersFailure(error))\r\n            })\r\n    }\r\n}\r\n\r\nexport default fetchUsers;","export const fetchUsersRequest = () => {\r\n    return {\r\n        type: 'FETCH_USERS_REQUEST'\r\n    }\r\n}\r\nexport const fetchUsersSuccess = (characters) => {\r\n    return {\r\n        type: 'FETCH_USERS_SUCCESS',\r\n        data: characters\r\n    }\r\n}\r\nexport const fetchUsersFailure = (error) => {\r\n    return {\r\n        type: 'FETCH_USERS_FAILURE',\r\n        data: error\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/reducers/reducers';\nimport fetchUsers from './redux/fetchapi/fetchapi'\n\nstore.dispatch(fetchUsers());\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);"],"sourceRoot":""}